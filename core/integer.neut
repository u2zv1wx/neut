(no-implicit-core)

(include library "core/foundation.neut")

(include library "core/base.neut")

(include library "core/top.neut")

(include library "core/bool.neut")

(include library "core/string.neut")

(section i64)

(define negate ((x i64))
  (witness i64
    (mul-i64 x -1)))

(define print-digit ((x i64))
  (witness top
    (with let-bind
      (print-character (unsafe.cast i64 i8 (add-i64 x 48))))))

;; とりあえず直接printする。ホントはbufferをつかって実装するべき。
(define print ((x i64))
  (witness top
    (if (icmp-slt-i64 x 0)
      (with let-bind
        (string.print "-")
        (print (negate x)))
      (if (icmp-slt-i64 x 10)
        (print-digit x)
        (with let-bind
          (let q (sdiv-i64 x 10))
          (let r (srem-i64 x 10))
          (print q)
          (print-digit r))))))

(define add add-i64)

(end i64)
