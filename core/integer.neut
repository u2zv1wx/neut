(no-implicit-core)

(include library "core/foundation.neut")

(include library "core/base.neut")

(include library "core/top.neut")

(include library "core/bool.neut")

(include library "core/string.neut")

(section i64)

(definition negate ((x i64))
  (witness i64
    (mul x -1)))

(definition print-digit ((x i64))
  (witness top
    (with let-bind
      (print-character (unsafe:cast i64 u8 (add x 48))))))

;; とりあえず直接printする。ホントはbufferをつかって実装するべき。
(definition print ((x i64))
  (witness top
    (if (< x 0)
      (with let-bind
        (string:print "-")
        (print (negate x)))
      (if (< x 10)
        (print-digit x)
        (with let-bind
          (let q (div x 10))
          (let r (rem x 10))
          (print q)
          (print-digit r))))))

(end i64)
