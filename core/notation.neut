(no-implicit-core)

;; define basic notations

;; synonyms
(keyword type)

(notation type tau)

(keyword universe)

(notation universe tau)

(keyword forall)

(notation forall pi)

(keyword Π)

(notation Π pi)

(keyword switch)

(notation switch enum-elimination)

;; (keyword hole)

;; (notation hole (zeta _))

(keyword *)

(notation * (hole _))

(keyword lambda)

(notation lambda pi-introduction)

(keyword λ)

(notation λ pi-introduction)

(keyword witness)

(notation (witness t e)
  ((lambda ((x t)) x) e))

(keyword hom)

(notation (hom t) t)

(notation (hom t rest+)
  (pi
    ((_ t))
    (hom rest+)))

(keyword theorem)

(notation (theorem x t e)
  (let (x t) e))

(keyword assume)

(notation assume lambda)

(keyword tuple)

(notation tuple sigma-introduction)

(keyword construct)

(notation construct sigma-introduction)

(keyword destruct)

(notation (destruct e xts rest+)
  (sigma-elimination xts e (with let-bind rest+)))

(keyword if)

(notation (if b e1 e2)
  (switch b
    (1 e1)
    (default e2)))

(keyword provide)

(notation (provide e)
  (let _ e))

;; (notation (if b e1 e2)
;;   (switch b
;;     (bool:true e1)
;;     (bool:false e2)))

;; (keyword verify)

;; ;; (notation (verify e)
;; ;;   (let _ e))

;; (notation (verify e)
;;   (statement
;;     e
;;     (string:print "verified")))
