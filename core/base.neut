(no-implicit-core)

(include "core/foundation.neut")

(define compose
  ((a tau)
   (b tau)
   (c tau)
   (f (hom a b))
   (g (hom b c)))
  (witness (hom a c)
    (lambda ((x a))
      (g (f x)))))

;; (define let-bind ((a tau) (b tau) (x a) (k (hom a b)))
;;   (witness b
;;     (k x)))

;; (provide let-bind)
;; (define let-bind ([a tau] [b tau] (x a) (k (hom a b)))
;;   (witness b
;;     (k x)))
