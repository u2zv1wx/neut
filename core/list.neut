(no-implicit-core)

(include "notation.neut")

(inductive list ((a tau))
  (list:nil () (list a))
  (list:cons ((x a) (xs (list a))) (list a)))

;; auto-implicit:
;;   (attribute list:nil (implicit 0))
;;   (attribute list:cons (implicit 0))

(include "option.neut")

(use list)

(use option)

(definition list:head ([a tau] (xs (list a)))
  (case xs
    ((nil) (none))
    ((cons y _) (some y))))

(definition list:length ([a tau] (xs (list a)))
  (case xs
    ((nil) 0)
    ((cons _ ys) (u64.add 1 (length a ys)))))

(definition list:map ([a tau] [b tau] (f (hom a b)) (xs (list a)))
  (case xs
    ((nil) (nil))
    ((cons y ys)
      (cons (f y) (map a b f ys)))))

(definition some-function ([a tau] (xs (list a)))
  (case xs
    ((nil) true)
    ((cons _ _) false)))

(include "bool.neut")

;; (attribute list:nil (implicit 0))

;; (attribute list:cons (implicit 0))

;; (list:cons (i64 3) (list:nil i64))

(definition list:is-null ([a tau] (xs (list a)))
  (case xs
    ((nil) true)
    ((cons _ _) false)))

(ensure libarchive/3.4.2
  "https://www.libarchive.org/downloads/libarchive-3.4.2.tar.gz")

(unuse option)

(unuse list)

;; ここ以降ではもう自由に (include library "libarchive/3.4.2/(...)") などと書ける

;; (list:cons (i64 10))
