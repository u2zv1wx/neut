;; should be loaded after `notation`, `top`.

(constant file-descriptor type)

(constant stdin file-descriptor)

(constant stdout file-descriptor)

(constant stderr file-descriptor)

;; u8-array Aも返すようにしないと、この配列をfreeする処理が抜け落ちてしまう。
;; writeはべつに配列を消費するわけではないので。
;; (constant write
;;   (pi
;;     ((A type)
;;      (out file-descriptor)
;;      (str (u8-array A))
;;      (len (is-enum A)))
;;     i64))

;; こうですね。こうして見てみると、readとインターフェイスが一致していることがわかる。
(constant write
  (pi
    ((A type)
     (out file-descriptor)
     (str (u8-array A))
     (len (is-enum A)))
    (product (u8-array A) i64)))

(constant read
  (pi
    ((A type)
     (in file-descriptor)
     (buf (u8-array A))
     (len (is-enum A)))
    (product (u8-array A) i64)))
;; ここ (sigma (result (u8-array A)) (wrote-size i64)) とかってしたほうがわかりやすくてよさそう？

(constant i64.add
  (arrow (i64 i64) i64))
