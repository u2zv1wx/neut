(reserve let)

(reserve begin)

(notation (begin e)
  e)

(notation (begin e rest+)
  (bind _ (begin e) (begin rest+)))

(notation (begin (let x e+) rest+)
  (bind x (begin e+) (begin rest+)))

(begin
  (let yay (lift (thunk (lambda (y) ((unthunk succ) y)))))
  (let foo (lift zero))
  (let sya (lift (thunk (mu rec ((unthunk succ) foo)))))
  (let k (lift (thunk (unthunk sya))))
  (lift zero)
  (let p (lift (thunk ((unthunk yay) (thunk ((unthunk succ) zero))))))
  (lift (thunk ((unthunk succ) zero)))
  (let q (lift (thunk ((unthunk yay) (thunk ((unthunk succ) zero))))))
  (lift true))
