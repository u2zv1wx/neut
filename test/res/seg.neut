
;; (no-implicit-core)


;; (inductive list ((a tau))
;;   (nil ()
;;     (list a))
;;   (cons ((x a) (xs (list a)))
;;     (list a)))

(include library "core/integer.neut")

(use list)

(let xs (list i64)
  (cons 25 (list:cons 100 (cons 1000 (nil)))))

(case xs
  ((nil) (i64:print 10))
  ((cons value ys) (i64:print (i64 20))))
