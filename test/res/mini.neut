(reserve let)

(reserve begin)

(type nat)

(value zero (down nat))

(value succ (down (forall ((_ (down nat))) nat)))

(type bool)

(value true (down bool))

(value false (down bool))

(notation (begin e)
  e)

(notation (begin e rest+)
  (bind _ (begin e) (begin rest+)))

(notation (begin (let x e+) rest+)
  (bind x (begin e+) (begin rest+)))

(begin
  (lift (thunk ((unthunk succ) zero))))
