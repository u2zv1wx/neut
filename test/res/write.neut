;; (definition test ()
;;   "あ")

;; (os:write os:stdout (test) 3)

;; (no-implicit-core)

;; (introspect OS
;;   (linux (include library "core/constant/linux.neut"))
;;   (darwin (include library "core/constant/darwin.neut")))

;; (include "notation.neut")

(let test "あ")

;; こっちだとmalloc/freeがめっちゃ発生する。
;; (begin
;;   (let len (write hole stdout test 3))
;;   (let len (write hole stdout test 3))
;;   (let len (write hole stdout test 3))
;;   len)

;; (write hole stdout &test 3)


;; こっちだと最初と最後の1回だけ。
;; ここの最初の「&test」も「test」に解決されるわけだけど、するとbeginのあとでも「test」が
;; 使用されていることから、ここでtestのコピーが走ることになる。
;; (begin
;;   (let len (os:write os:stdout &test 3))
;;   (let len (os:write os:stdout &test 3))
;;   (let len (os:write os:stdout &test 3))
;;   len) ;; ここでtestがfreeされる（直前のwriteでborrowされているので）

(@os:write 3 os:stdout "あ" 3)

(let a (os:write os:stdout &test 3))
(let a (os:write os:stdout &test 3))
(let a (os:write os:stdout &test 3))
