include "../header.neut"

define f0 : top -> i64 =
  fix _ (_ : top). 0

reduce
  i64.print (f0 top.unit)

define fact : i64 -> i64 =
  fix self (x : i64).
    if icmp-sle-i64 x 0 then
      1
    else
      mul-i64 x (self (sub-i64 x 1))
    end

reduce
  i64.print (fact 10)

define fact' : i64 -> i64 =
  fix (self : i64 -> i64) (x : i64).
    if icmp-sle-i64 x 0 then
      1
    else
      mul-i64 x (self (sub-i64 x 1))
    end

reduce
  i64.print (fact' 5)

define tak : i64 -> i64 -> i64 -> i64 =
  fix self x y z.
    if icmp-sle-i64 x y then
      y
    else
      let x' = self (sub-i64 x 1) y z in
      let y' = self (sub-i64 y 1) z x in
      let z' = self (sub-i64 z 1) x y in
      self x' y' z'
    end

reduce
  i64.print (tak 12 6 0)
