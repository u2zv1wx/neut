(include "../header.neut")

; degenerates to (Î» () (i64 0))
(define f0
  (fix _ ()
    (i64 0)))

(reduce (i64.print (f0)))

(define fact
  (fix self ((x i64))
    (if (icmp-sle-i64 x 0)
      1
      (mul-i64 x (self (sub-i64 x 1))))))

(reduce (i64.print (fact 10))) ; 3628800

; fix with type annotation
(define fact'
  (fix (self (hom i64 i64)) ((x i64))
    (if (icmp-sle-i64 x 0)
      1
      (mul-i64 x (self (sub-i64 x 1))))))

(reduce (i64.print (fact' 5))) ; 120

; https://mathworld.wolfram.com/TAKFunction.html
(define tak
  (fix self (x y z)
    (if (icmp-sle-i64 x y)
      y
      (with identity.bind
        (let x' (self (sub-i64 x 1) y z))
        (let y' (self (sub-i64 y 1) z x))
        (let z' (self (sub-i64 z 1) x y))
        (self x' y' z')))))

(reduce (i64.print (tak 12 6 0))) ; 12
