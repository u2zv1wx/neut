;; nullary enum
(enum sample-0)

(enum sample-1 (foo 3))

(enum sample-2 (foo 0) (bar 2))

;; bypass by `enum-introduction`
(let lam-bar
  (lambda ((sample-2.bar tau))
    (with identity.bind
      (let _ sample-2.bar)
      (enum-introduction sample-2.bar))))

(i64.print (unsafe.cast sample-1 i64 sample-1.foo)) ;; 3

(enum sample-3
  (foo 1)
  (bar 3)
  buz ;; 4
  qux) ;; 5

(i64.print (unsafe.cast sample-3 i64 sample-3.foo)) ;; 1

(i64.print (unsafe.cast sample-2 i64 (lam-bar i8))) ;; 2

(i64.print (unsafe.cast sample-3 i64 sample-3.bar)) ;; 3

(i64.print (unsafe.cast sample-3 i64 sample-3.buz)) ;; 4

(i64.print (unsafe.cast sample-3 i64 sample-3.qux)) ;; 5

(use sample-3)

(let (p i64)
  (switch sample-3.qux
    (foo 0)
    (bar 1)
    (sample-3.buz 2)
    (qux 3)))

(i64.print p) ;; 3

(let (q i64)
  (switch sample-3.buz
    (foo 0)
    (default 8)))

(i64.print q) ;; 8
