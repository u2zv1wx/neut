include "../header.neut"

define f2 : i64 -> i64 =
  lambda (x : i64). x

reduce
  i64.print (f2 2)

define f3 : i64 -> i64 -> i64 =
  lambda x y. add-i64 x y

reduce
  i64.print (f3 1 2)

define f4 : (a : tau) -> (a -> a) -> a -> a =
  lambda a f x. f x

reduce
  i64.print (f4 i64 (lambda x. add-i64 x 1) 3)

define f5 (x : i64) : i64 -> i64 =
  let adder = lambda y. add-i64 x y in
  adder

define add-3 : i64 -> i64 =
  f5 3

reduce
  i64.print (add-3 2)

define f6 (g : i64 -> i64) : i64 -> i64 =
  let app = lambda y. g y in
  app

reduce
  i64.print ((f6 f2) 6)
