(include "../header.neut")

; nullary sigma-intro
(define a0 (sigma-introduction))

; nullary sigma-elim
(reduce
  (sigma-elimination () a0
    (string.print "0")))

; unary sigma-intro
(define a1
  (tuple (i64 1)))

; unary sigma-elim
(reduce
  (sigma-elimination (x) a1
    (i64.print x)))

; binary sigma-intro without dependence
(define a2
  (tuple (i64 2) (i64 2)))

; binary sigma-elim without dependence
(reduce
  (sigma-elimination (x _) a2
    (i64.print x)))

; binary sigma-elim with dependence
(define a3
  (witness (sigma ((a tau)) a)
    (tuple i64 2)))

; binary sigma-elim with dependence
(reduce
  (sigma-elimination (_ _) a3
    (i64.print 3)))

; 4-ary sigma-intro
(define a4
  (witness (product i8 i64 i64 i3)
    (tuple 4 4 4 4)))

; 4-ary sigma-elim
(reduce
  (destruct a4 (_ _ i _)
    (i64.print i)))
