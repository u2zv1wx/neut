* Neut

** About

Neut is a programming language based on dependent modal linear type theory, focusing on canonicity and orthogonality. The key features of Neut include:

- Expressive power of dependent type theory
- Static, predictable memory allocation/deallocation by linearity and modality
- Dependent type inference by non-chronological backtracking

** Installation

#+BEGIN_SRC
$ git clone https://github.com/u2zv1wx/neut
$ stack install
$ neut build path/to/file.neut
$ ./file
#+END_SRC

Neut depends on LLVM and Clang. When you execute =neut build=, both of the commands =llc= and =clang= must be in =$PATH=.

** References
- L. de Moura, J. Avigad, S. Kong, and C. Roux, Elaboration in Dependent Type Theory, [[https://arxiv.org/abs/1505.04324]], 2015.
- P. Levy, Call-by-Push-Value: A Subsuming Paradigm, Ph. D. thesis, Queen Mary College, 2001.
